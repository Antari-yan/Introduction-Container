services:
  env_builtins:
    image: alpine:latest
    #container_name: env_builtins
    #hostname: fancy_name
    deploy:
      restart_policy:
        condition: none
      labels:
        service.label: "this is a label on the service"
      placement:
        constraints:
          - "node.hostname == ict-services-test-3"
    entrypoint: ["/bin/sh","-c"]
    command:
      - |
        echo "Default available Env vars:"
        echo "PATH: $PATH"                          # Default system path
        echo "HOME: $HOME"                          # Home directory for root user
        echo "TERM: $TERM"                          # Terminal type (e.g., xterm)

        echo "Service Templates in Swarm Mode"
        echo "NODE_ID: $$X_NODE_ID"
        echo "NODE_HOSTNAME: $$X_NODE_HOSTNAME"
        echo "NODE_PLATFROM: $$X_NODE_PLATFROM"
        echo "NODE_PLATFROM_ARCHITECTURE: $$X_NODE_PLATFROM_ARCHITECTURE"
        echo "NODE_PLATFROM_OS: $$X_NODE_PLATFROM_OS"
        echo "SERVICE_ID: $$X_SERVICE_ID"
        echo "SERVICE_NAMES: $$X_SERVICE_NAMES"
        echo "SERVICE_LABELS: $$X_SERVICE_LABELS"
        echo "SERVICE_LABEL_STACK_NAMESPACE: $$X_SERVICE_LABEL_STACK_NAMESPACE"
        echo "SERVICE_LABEL_STACK_IMAGE: $$X_SERVICE_LABEL_STACK_IMAGE"
        echo "SERVICE_LABEL_CUSTOM: $$X_SERVICE_LABEL_CUSTOM"
        echo "TASK_ID: $$X_TASK_ID"
        echo "TASK_NAME: $$X_TASK_NAME"
        echo "TASK_SLOT: $$X_TASK_SLOT"

        # tail -f /dev/null # Prevent the container from going into complete state
    environment:
      # These only work in a Docker Swarm:
      # https://docs.docker.com/reference/cli/docker/service/create/#create-services-using-templates
      # https://forums.docker.com/t/example-usage-of-docker-swarm-template-placeholders/73859
      X_NODE_ID: '{{.Node.ID}}'
      X_NODE_HOSTNAME: '{{.Node.Hostname}}'
      X_NODE_PLATFROM: '{{.Node.Platform}}'
      X_NODE_PLATFROM_ARCHITECTURE: '{{.Node.Platform.Architecture}}'
      X_NODE_PLATFROM_OS: '{{.Node.Platform.OS}}'
      X_SERVICE_ID: '{{.Service.ID}}'
      X_SERVICE_NAMES: "{{.Service.Name}}"
      X_SERVICE_LABELS: '{{.Service.Labels}}'
      X_SERVICE_LABEL_STACK_NAMESPACE: '{{index .Service.Labels "com.docker.stack.namespace"}}_orion'
      X_SERVICE_LABEL_STACK_IMAGE: '{{index .Service.Labels "com.docker.stack.image"}}'
      X_SERVICE_LABEL_CUSTOM: '{{index .Service.Labels "service.label"}}'
      X_TASK_ID: '{{.Task.ID}}'
      X_TASK_NAME: '{{.Task.Name}}'
      X_TASK_SLOT: '{{.Task.Slot}}'

# docker compose -f docker-compose.placeholder-templates.yml down && docker compose -f docker-compose.placeholder-templates.yml up -d
# docker logs env_builtins
# docker container rm env_builtins
# docker compose -f docker-compose.placeholder-templates.yml down && docker compose -f docker-compose.placeholder-templates.yml up -d && docker logs env_builtins

# Swarm Mode:
# docker stack deploy env-test --compose-file docker-compose.placeholder-templates.yml
# docker service logs env-test_env_builtins
# docker stack rm env-test
# docker stack rm env-test && docker stack deploy env-test --compose-file docker-compose.placeholder-templates.yml && sleep 2 && docker service logs env-test_env_builtins

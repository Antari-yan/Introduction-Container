FROM golang:1-alpine

# Create a non-root user and group
RUN addgroup -S webgroup && adduser -S webuser -G webgroup

# Set working directory
WORKDIR /app

# Write the Go program using a heredoc
RUN cat << 'EOF' > main.go
package main

import (
  "fmt"
  "net/http"
)

func handler(w http.ResponseWriter, r *http.Request) {
  fmt.Fprintln(w, "Hello, World!")
}

func main() {
  http.HandleFunc("/", handler)
  http.ListenAndServe(":8080", nil)
}
EOF

# Build the Go binary
RUN go build -o webapp main.go

# Make the binary owned by the non-root user
RUN chown webuser:webgroup webapp

# Switch to the non-root user
USER webuser

# Expose the HTTP port
EXPOSE 8080/tcp

# Run the server
CMD ["./webapp"]


# docker build -t non-root-webserver -f Dockerfile.non-root .
# docker container run --rm -d --name non-root-webserver -p 8080:8080 non-root-webserver
# docker container exec -it non-root-webserver ps -ef
# docker container exec -it non-root-webserver id
# curl http://localhost:8080
# docker container stop non-root-webserver
